{
  "enabled": true,
  "name": "Auto Commit on Task Complete",
  "description": "Watches for task completion markers and automatically generates a descriptive commit message to COMMIT_MESSAGE.txt, then creates a git commit using that message file",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "COMMIT_MESSAGE.txt",
      "src/**/*.groovy",
      "build.gradle",
      "config.yml",
      "README.md",
      "*.md"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "A task has been completed. Please:\n1. Add any new files that should be committed to git to the stage with `git --no-pager add <filename>`\n2. Add all existing files to the stage `git --no-pager add -u`\n3. Analyze the recent changes made to the codebase with `git --no-pager diff --cached` \n4. Generate a clear, descriptive commit message following conventional commit format and write it to COMMIT_MESSAGE.txt\n5. Execute: `git --no-pager commit -F COMMIT_MESSAGE.txt`\n\n**NOTE:** use the `--no-pager` option with every `git` command so you don't get hung up waiting for input.\n**NEVER USE `git add -a` or `git add -A`\n\nThe commit message should:\n- Start with a type (feat/fix/docs/refactor/test/chore)\n- Include a concise subject line (50 chars or less)\n- Add a detailed body if needed explaining what changed and why\n- Reference any relevant issues or tasks\n\nAfter writing COMMIT_MESSAGE.txt, create the git commit using that file."
  }
}